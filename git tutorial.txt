GIT TUTORIAL

ls ==> list of files in that folder
mkdir name ==>makes directory(folder) called name
cd name ==>change directory takes you inside that folder called name
git init ==>initialize a git repositary there where you run this command
ls -a ==>show all hidden files
ls .name ==> shows you what is inside that file/folder called name
touch name.txt ==>created a file(according to the ending) called name 
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git add . ==> add all the files into staging area
git add name.txt ==> only file known as name will be added to staging area
git status ==> shows you status
git commit ==>commit all the changes made
vi name.txt ==> takes you into that file called name and let you edit it ==>:x ==> to exit vi
cat name.txt ==>shows you the content of that file
git log ==> shows you the history of edits of the file
rm -rf name.txt ==>delete that file
git reset "hash code" ==> bring you back to that phase 
git stash ==> bing all the work from current repo to workplace(when you want to go to previous phase)==>sends everything to backstage
git stash pop ==> bing everything back to the stage
git stash clear ==> removes everythng from backstage
git remote add origin "URL" ==> connects the url to the repo
git remote -v ==>shows the connected urls
git push origin "branch name"==>push your files to the connected repo
git branch feature ==> creates a new branch called feature
git checkout feature ==> switch to feature branch
git merge feature ==>merge the branch with the main branch
git add remote upstreme "URL"==>upstream is where u have cloned and origin is your own 
git push origin "branch name" -f==> when you want to delete a commit send it to stash area(remove that comit) then force push it to the repo
git fetch --all --prune ==> fetch all the commits to your workplace
git reset --hard upstream/main ==>if you are few commits behind the original then you will reach upto them


